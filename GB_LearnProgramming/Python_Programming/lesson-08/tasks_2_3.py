"""
        2) Создайте собственный класс-исключение, обрабатывающий ситуацию деления на нуль.
        Проверьте его работу на данных, вводимых пользователем. При вводе пользователем нуля в
        качестве делителя программа должна корректно обработать эту ситуацию и не завершиться с
        ошибкой.
        3) Создайте собственный класс-исключение, который должен проверять содержимое списка на
        наличие только чисел. Проверить работу исключения на реальном примере. Необходимо
        запрашивать у пользователя данные и заполнять список только числами. Класс-исключение
        должен контролировать типы данных элементов списка.
        Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
        пользователь сам не остановит работу скрипта, введя, например, команду “stop”. При этом
        скрипт завершается, сформированный список с числами выводится на экран.
        Подсказка: для данного задания примем, что пользователь может вводить только числа и
        строки. При вводе пользователем очередного элемента необходимо реализовать проверку
        типа элемента и вносить его в список, только если введено число. Класс-исключение должен
        не позволить пользователю ввести текст (не число) и отобразить соответствующее
        сообщение. При этом работа скрипта не должна завершаться.
"""


class OwnZeroDivisionError(Exception):
    pass


class NotDigitError(Exception):
    pass


def my_div(dividend, divisor):
    if not dividend.isdigit() or not divisor.isdigit():
        raise NotDigitError
    else:
        if float(divisor) == 0:
            raise OwnZeroDivisionError
        result = float(dividend) / float(divisor)
        return result


resultsList = []
print('Для окончания введите \'stop\'')
while True:
    user_input_a = input('Введите делимое: ')
    if user_input_a.lower() == 'stop':
        break
    user_input_b = input('Введите делитель: ')
    try:
        resultsList.append([user_input_a, user_input_b, my_div(user_input_a, user_input_b)])
        print(f'Делимое, делитель и результат деления успешно добавлены в список.')
    except OwnZeroDivisionError:
        print('Ошибка деления на ноль.')
    except NotDigitError:
        print('Необходимо вводить только числа.')

print('Введённые числа и результаты:')
for i in resultsList:
    print(f'{i[0]} / {i[1]} = {i[2]:.4f}')
print('That\'s all, folks!')
